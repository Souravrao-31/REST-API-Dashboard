{"ast":null,"code":"import inflection from 'inflection';\nimport useVersion from '../useVersion';\nimport { useCheckMinimumRequiredProps } from '../checkMinimumRequiredProps';\nimport { useGetOne } from '../../dataProvider';\nimport { useTranslate } from '../../i18n';\nimport { useNotify, useRedirect, useRefresh } from '../../sideEffect';\nimport { CRUD_GET_ONE } from '../../actions';\nimport { useResourceContext } from '../../core';\n/**\n * Prepare data for the Show view\n *\n * @param {Object} props The props passed to the Show component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Show view\n *\n * @example\n *\n * import { useShowController } from 'react-admin';\n * import ShowView from './ShowView';\n *\n * const MyShow = props => {\n *     const controllerProps = useShowController(props);\n *     return <ShowView {...controllerProps} {...props} />;\n * }\n */\n\nexport var useShowController = function (props) {\n  useCheckMinimumRequiredProps('Show', ['basePath', 'resource'], props);\n  var basePath = props.basePath,\n      hasCreate = props.hasCreate,\n      hasEdit = props.hasEdit,\n      hasList = props.hasList,\n      hasShow = props.hasShow,\n      id = props.id;\n  var resource = useResourceContext(props);\n  var translate = useTranslate();\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var refresh = useRefresh();\n  var version = useVersion();\n\n  var _a = useGetOne(resource, id, {\n    action: CRUD_GET_ONE,\n    onFailure: function () {\n      notify('ra.notification.item_doesnt_exist', 'warning');\n      redirect('list', basePath);\n      refresh();\n    }\n  }),\n      record = _a.data,\n      loading = _a.loading,\n      loaded = _a.loaded;\n\n  var resourceName = translate(\"resources.\" + resource + \".name\", {\n    smart_count: 1,\n    _: inflection.humanize(inflection.singularize(resource))\n  });\n  var defaultTitle = translate('ra.page.show', {\n    name: \"\" + resourceName,\n    id: id,\n    record: record\n  });\n  return {\n    loading: loading,\n    loaded: loaded,\n    defaultTitle: defaultTitle,\n    resource: resource,\n    basePath: basePath,\n    record: record,\n    hasCreate: hasCreate,\n    hasEdit: hasEdit,\n    hasList: hasList,\n    hasShow: hasShow,\n    version: version\n  };\n};","map":{"version":3,"sources":["C:/Users/win-10/Desktop/React/admin-dash/client/node_modules/ra-core/esm/controller/details/useShowController.js"],"names":["inflection","useVersion","useCheckMinimumRequiredProps","useGetOne","useTranslate","useNotify","useRedirect","useRefresh","CRUD_GET_ONE","useResourceContext","useShowController","props","basePath","hasCreate","hasEdit","hasList","hasShow","id","resource","translate","notify","redirect","refresh","version","_a","action","onFailure","record","data","loading","loaded","resourceName","smart_count","_","humanize","singularize","defaultTitle","name"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,4BAAT,QAA6C,8BAA7C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,QAAmD,kBAAnD;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,iBAAiB,GAAG,UAAUC,KAAV,EAAiB;AAC5CT,EAAAA,4BAA4B,CAAC,MAAD,EAAS,CAAC,UAAD,EAAa,UAAb,CAAT,EAAmCS,KAAnC,CAA5B;AACA,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MAA+BC,SAAS,GAAGF,KAAK,CAACE,SAAjD;AAAA,MAA4DC,OAAO,GAAGH,KAAK,CAACG,OAA5E;AAAA,MAAqFC,OAAO,GAAGJ,KAAK,CAACI,OAArG;AAAA,MAA8GC,OAAO,GAAGL,KAAK,CAACK,OAA9H;AAAA,MAAuIC,EAAE,GAAGN,KAAK,CAACM,EAAlJ;AACA,MAAIC,QAAQ,GAAGT,kBAAkB,CAACE,KAAD,CAAjC;AACA,MAAIQ,SAAS,GAAGf,YAAY,EAA5B;AACA,MAAIgB,MAAM,GAAGf,SAAS,EAAtB;AACA,MAAIgB,QAAQ,GAAGf,WAAW,EAA1B;AACA,MAAIgB,OAAO,GAAGf,UAAU,EAAxB;AACA,MAAIgB,OAAO,GAAGtB,UAAU,EAAxB;;AACA,MAAIuB,EAAE,GAAGrB,SAAS,CAACe,QAAD,EAAWD,EAAX,EAAe;AAC7BQ,IAAAA,MAAM,EAAEjB,YADqB;AAE7BkB,IAAAA,SAAS,EAAE,YAAY;AACnBN,MAAAA,MAAM,CAAC,mCAAD,EAAsC,SAAtC,CAAN;AACAC,MAAAA,QAAQ,CAAC,MAAD,EAAST,QAAT,CAAR;AACAU,MAAAA,OAAO;AACV;AAN4B,GAAf,CAAlB;AAAA,MAOIK,MAAM,GAAGH,EAAE,CAACI,IAPhB;AAAA,MAOsBC,OAAO,GAAGL,EAAE,CAACK,OAPnC;AAAA,MAO4CC,MAAM,GAAGN,EAAE,CAACM,MAPxD;;AAQA,MAAIC,YAAY,GAAGZ,SAAS,CAAC,eAAeD,QAAf,GAA0B,OAA3B,EAAoC;AAC5Dc,IAAAA,WAAW,EAAE,CAD+C;AAE5DC,IAAAA,CAAC,EAAEjC,UAAU,CAACkC,QAAX,CAAoBlC,UAAU,CAACmC,WAAX,CAAuBjB,QAAvB,CAApB;AAFyD,GAApC,CAA5B;AAIA,MAAIkB,YAAY,GAAGjB,SAAS,CAAC,cAAD,EAAiB;AACzCkB,IAAAA,IAAI,EAAE,KAAKN,YAD8B;AAEzCd,IAAAA,EAAE,EAAEA,EAFqC;AAGzCU,IAAAA,MAAM,EAAEA;AAHiC,GAAjB,CAA5B;AAKA,SAAO;AACHE,IAAAA,OAAO,EAAEA,OADN;AAEHC,IAAAA,MAAM,EAAEA,MAFL;AAGHM,IAAAA,YAAY,EAAEA,YAHX;AAIHlB,IAAAA,QAAQ,EAAEA,QAJP;AAKHN,IAAAA,QAAQ,EAAEA,QALP;AAMHe,IAAAA,MAAM,EAAEA,MANL;AAOHd,IAAAA,SAAS,EAAEA,SAPR;AAQHC,IAAAA,OAAO,EAAEA,OARN;AASHC,IAAAA,OAAO,EAAEA,OATN;AAUHC,IAAAA,OAAO,EAAEA,OAVN;AAWHO,IAAAA,OAAO,EAAEA;AAXN,GAAP;AAaH,CAvCM","sourcesContent":["import inflection from 'inflection';\nimport useVersion from '../useVersion';\nimport { useCheckMinimumRequiredProps } from '../checkMinimumRequiredProps';\nimport { useGetOne } from '../../dataProvider';\nimport { useTranslate } from '../../i18n';\nimport { useNotify, useRedirect, useRefresh } from '../../sideEffect';\nimport { CRUD_GET_ONE } from '../../actions';\nimport { useResourceContext } from '../../core';\n/**\n * Prepare data for the Show view\n *\n * @param {Object} props The props passed to the Show component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Show view\n *\n * @example\n *\n * import { useShowController } from 'react-admin';\n * import ShowView from './ShowView';\n *\n * const MyShow = props => {\n *     const controllerProps = useShowController(props);\n *     return <ShowView {...controllerProps} {...props} />;\n * }\n */\nexport var useShowController = function (props) {\n    useCheckMinimumRequiredProps('Show', ['basePath', 'resource'], props);\n    var basePath = props.basePath, hasCreate = props.hasCreate, hasEdit = props.hasEdit, hasList = props.hasList, hasShow = props.hasShow, id = props.id;\n    var resource = useResourceContext(props);\n    var translate = useTranslate();\n    var notify = useNotify();\n    var redirect = useRedirect();\n    var refresh = useRefresh();\n    var version = useVersion();\n    var _a = useGetOne(resource, id, {\n        action: CRUD_GET_ONE,\n        onFailure: function () {\n            notify('ra.notification.item_doesnt_exist', 'warning');\n            redirect('list', basePath);\n            refresh();\n        },\n    }), record = _a.data, loading = _a.loading, loaded = _a.loaded;\n    var resourceName = translate(\"resources.\" + resource + \".name\", {\n        smart_count: 1,\n        _: inflection.humanize(inflection.singularize(resource)),\n    });\n    var defaultTitle = translate('ra.page.show', {\n        name: \"\" + resourceName,\n        id: id,\n        record: record,\n    });\n    return {\n        loading: loading,\n        loaded: loaded,\n        defaultTitle: defaultTitle,\n        resource: resource,\n        basePath: basePath,\n        record: record,\n        hasCreate: hasCreate,\n        hasEdit: hasEdit,\n        hasList: hasList,\n        hasShow: hasShow,\n        version: version,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}