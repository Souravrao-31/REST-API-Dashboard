{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Children, cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useReference, getResourceLinkPath, ResourceContextProvider } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Link from '../Link';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\n/**\n * Fetch reference record, and delegate rendering to child component.\n *\n * The reference prop should be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * By default, includes a link to the <Edit> page of the related record\n * (`/users/:userId` in the previous example).\n *\n * Set the `link` prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link=\"show\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * You can also prevent `<ReferenceField>` from adding link to children by setting\n * `link` to false.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={false}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * Alternatively, you can also pass a custom function to `link`. It must take reference and record\n * as arguments and return a string\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={(record, reference) => \"/path/to/${reference}/${record}\"}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * In previous versions of React-Admin, the prop `linkType` was used. It is now deprecated and replaced with `link`. However\n * backward-compatibility is still kept\n */\n\nvar ReferenceField = function (_a) {\n  var record = _a.record,\n      source = _a.source,\n      emptyText = _a.emptyText,\n      props = __rest(_a, [\"record\", \"source\", \"emptyText\"]);\n\n  return get(record, source) == null ? emptyText ? React.createElement(Typography, {\n    component: \"span\",\n    variant: \"body2\"\n  }, emptyText) : null : React.createElement(NonEmptyReferenceField, __assign({}, props, {\n    record: record,\n    source: source\n  }));\n};\n\nReferenceField.propTypes = {\n  addLabel: PropTypes.bool,\n  basePath: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  classes: PropTypes.any,\n  className: PropTypes.string,\n  cellClassName: PropTypes.string,\n  headerClassName: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  record: PropTypes.any,\n  reference: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  sortBy: PropTypes.string,\n  sortByOrder: fieldPropTypes.sortByOrder,\n  source: PropTypes.string.isRequired,\n  translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  link: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]).isRequired\n};\nReferenceField.defaultProps = {\n  addLabel: true,\n  classes: {},\n  link: 'edit'\n};\n/**\n * This intermediate component is made necessary by the useReference hook,\n * which cannot be called conditionally when get(record, source) is empty.\n */\n\nexport var NonEmptyReferenceField = function (_a) {\n  var children = _a.children,\n      record = _a.record,\n      source = _a.source,\n      props = __rest(_a, [\"children\", \"record\", \"source\"]);\n\n  if (React.Children.count(children) !== 1) {\n    throw new Error('<ReferenceField> only accepts a single child');\n  }\n\n  var basePath = props.basePath,\n      resource = props.resource,\n      reference = props.reference;\n  var resourceLinkPath = getResourceLinkPath(__assign(__assign({}, props), {\n    resource: resource,\n    record: record,\n    source: source,\n    basePath: basePath\n  }));\n  return React.createElement(ResourceContextProvider, {\n    value: reference\n  }, React.createElement(PureReferenceFieldView, __assign({}, props, useReference({\n    reference: reference,\n    id: get(record, source)\n  }), {\n    resourceLinkPath: resourceLinkPath\n  }), children));\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    link: {\n      color: theme.palette.primary.main\n    }\n  };\n}, {\n  name: 'RaReferenceField'\n}); // useful to prevent click bubbling in a datagrid with rowClick\n\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};\n\nexport var ReferenceFieldView = function (props) {\n  var basePath = props.basePath,\n      children = props.children,\n      className = props.className,\n      classesOverride = props.classes,\n      error = props.error,\n      loaded = props.loaded,\n      loading = props.loading,\n      record = props.record,\n      reference = props.reference,\n      referenceRecord = props.referenceRecord,\n      resource = props.resource,\n      resourceLinkPath = props.resourceLinkPath,\n      source = props.source,\n      _a = props.translateChoice,\n      translateChoice = _a === void 0 ? false : _a,\n      rest = __rest(props, [\"basePath\", \"children\", \"className\", \"classes\", \"error\", \"loaded\", \"loading\", \"record\", \"reference\", \"referenceRecord\", \"resource\", \"resourceLinkPath\", \"source\", \"translateChoice\"]);\n\n  var classes = useStyles(props);\n\n  if (!loaded) {\n    return React.createElement(LinearProgress, null);\n  }\n\n  if (error) {\n    return (\n      /* eslint-disable jsx-a11y/role-supports-aria-props */\n      React.createElement(ErrorIcon, {\n        \"aria-errormessage\": error.message ? error.message : error,\n        role: \"presentation\",\n        color: \"error\",\n        fontSize: \"small\"\n      })\n      /* eslint-enable */\n\n    );\n  }\n\n  if (!referenceRecord) {\n    return null;\n  }\n\n  if (resourceLinkPath) {\n    return React.createElement(Link, {\n      to: resourceLinkPath,\n      className: className,\n      onClick: stopPropagation\n    }, cloneElement(Children.only(children), __assign({\n      className: classnames(children.props.className, classes.link // force color override for Typography components\n      ),\n      record: referenceRecord,\n      resource: reference,\n      basePath: basePath,\n      translateChoice: translateChoice\n    }, sanitizeFieldRestProps(rest))));\n  }\n\n  return cloneElement(Children.only(children), __assign({\n    record: referenceRecord,\n    resource: reference,\n    basePath: basePath,\n    translateChoice: translateChoice\n  }, sanitizeFieldRestProps(rest)));\n};\nReferenceFieldView.propTypes = {\n  basePath: PropTypes.string,\n  children: PropTypes.element,\n  className: PropTypes.string,\n  classes: PropTypes.any,\n  loading: PropTypes.bool,\n  record: PropTypes.any,\n  reference: PropTypes.string,\n  referenceRecord: PropTypes.any,\n  resource: PropTypes.string,\n  resourceLinkPath: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([false])]),\n  source: PropTypes.string,\n  translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n};\nvar PureReferenceFieldView = memo(ReferenceFieldView);\nexport default ReferenceField;","map":{"version":3,"sources":["C:/Users/win-10/Desktop/React/admin-dash/client/node_modules/ra-ui-materialui/esm/field/ReferenceField.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","Children","cloneElement","memo","PropTypes","classnames","get","makeStyles","Typography","ErrorIcon","useReference","getResourceLinkPath","ResourceContextProvider","LinearProgress","Link","sanitizeFieldRestProps","fieldPropTypes","ReferenceField","_a","record","source","emptyText","props","createElement","component","variant","NonEmptyReferenceField","propTypes","addLabel","bool","basePath","string","children","element","isRequired","classes","any","className","cellClassName","headerClassName","label","oneOfType","reference","resource","sortBy","sortByOrder","translateChoice","func","linkType","link","defaultProps","count","Error","resourceLinkPath","value","PureReferenceFieldView","id","useStyles","theme","color","palette","primary","main","name","stopPropagation","ReferenceFieldView","classesOverride","error","loaded","loading","referenceRecord","rest","message","role","fontSize","to","onClick","only","oneOf"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUV,CAAV,EAAaW,CAAb,EAAgB;AAClD,MAAIZ,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIM,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,KAA8CM,CAAC,CAACC,OAAF,CAAUP,CAAV,IAAe,CAAjE,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;;AACJ,MAAIL,CAAC,IAAI,IAAL,IAAa,OAAOH,MAAM,CAACgB,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIZ,CAAC,GAAG,CAAR,EAAWI,CAAC,GAAGR,MAAM,CAACgB,qBAAP,CAA6Bb,CAA7B,CAApB,EAAqDC,CAAC,GAAGI,CAAC,CAACD,MAA3D,EAAmEH,CAAC,EAApE,EAAwE;AACpE,QAAIU,CAAC,CAACC,OAAF,CAAUP,CAAC,CAACJ,CAAD,CAAX,IAAkB,CAAlB,IAAuBJ,MAAM,CAACS,SAAP,CAAiBQ,oBAAjB,CAAsCN,IAAtC,CAA2CR,CAA3C,EAA8CK,CAAC,CAACJ,CAAD,CAA/C,CAA3B,EACIF,CAAC,CAACM,CAAC,CAACJ,CAAD,CAAF,CAAD,GAAUD,CAAC,CAACK,CAAC,CAACJ,CAAD,CAAF,CAAX;AACP;AACL,SAAOF,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKgB,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,IAAjC,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,EAA4CC,uBAA5C,QAA4E,SAA5E;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG,UAAUC,EAAV,EAAc;AAC/B,MAAIC,MAAM,GAAGD,EAAE,CAACC,MAAhB;AAAA,MAAwBC,MAAM,GAAGF,EAAE,CAACE,MAApC;AAAA,MAA4CC,SAAS,GAAGH,EAAE,CAACG,SAA3D;AAAA,MAAsEC,KAAK,GAAG3B,MAAM,CAACuB,EAAD,EAAK,CAAC,QAAD,EAAW,QAAX,EAAqB,WAArB,CAAL,CAApF;;AACA,SAAOZ,GAAG,CAACa,MAAD,EAASC,MAAT,CAAH,IAAuB,IAAvB,GAA+BC,SAAS,GAAIrB,KAAK,CAACuB,aAAN,CAAoBf,UAApB,EAAgC;AAAEgB,IAAAA,SAAS,EAAE,MAAb;AAAqBC,IAAAA,OAAO,EAAE;AAA9B,GAAhC,EAAyEJ,SAAzE,CAAJ,GAA2F,IAAnI,GAA4IrB,KAAK,CAACuB,aAAN,CAAoBG,sBAApB,EAA4C7C,QAAQ,CAAC,EAAD,EAAKyC,KAAL,EAAY;AAAEH,IAAAA,MAAM,EAAEA,MAAV;AAAkBC,IAAAA,MAAM,EAAEA;AAA1B,GAAZ,CAApD,CAAnJ;AACH,CAHD;;AAIAH,cAAc,CAACU,SAAf,GAA2B;AACvBC,EAAAA,QAAQ,EAAExB,SAAS,CAACyB,IADG;AAEvBC,EAAAA,QAAQ,EAAE1B,SAAS,CAAC2B,MAFG;AAGvBC,EAAAA,QAAQ,EAAE5B,SAAS,CAAC6B,OAAV,CAAkBC,UAHL;AAIvBC,EAAAA,OAAO,EAAE/B,SAAS,CAACgC,GAJI;AAKvBC,EAAAA,SAAS,EAAEjC,SAAS,CAAC2B,MALE;AAMvBO,EAAAA,aAAa,EAAElC,SAAS,CAAC2B,MANF;AAOvBQ,EAAAA,eAAe,EAAEnC,SAAS,CAAC2B,MAPJ;AAQvBS,EAAAA,KAAK,EAAEpC,SAAS,CAACqC,SAAV,CAAoB,CAACrC,SAAS,CAAC2B,MAAX,EAAmB3B,SAAS,CAAC6B,OAA7B,CAApB,CARgB;AASvBd,EAAAA,MAAM,EAAEf,SAAS,CAACgC,GATK;AAUvBM,EAAAA,SAAS,EAAEtC,SAAS,CAAC2B,MAAV,CAAiBG,UAVL;AAWvBS,EAAAA,QAAQ,EAAEvC,SAAS,CAAC2B,MAXG;AAYvBa,EAAAA,MAAM,EAAExC,SAAS,CAAC2B,MAZK;AAavBc,EAAAA,WAAW,EAAE7B,cAAc,CAAC6B,WAbL;AAcvBzB,EAAAA,MAAM,EAAEhB,SAAS,CAAC2B,MAAV,CAAiBG,UAdF;AAevBY,EAAAA,eAAe,EAAE1C,SAAS,CAACqC,SAAV,CAAoB,CAACrC,SAAS,CAAC2C,IAAX,EAAiB3C,SAAS,CAACyB,IAA3B,CAApB,CAfM;AAgBvBmB,EAAAA,QAAQ,EAAE5C,SAAS,CAACqC,SAAV,CAAoB,CAC1BrC,SAAS,CAAC2B,MADgB,EAE1B3B,SAAS,CAACyB,IAFgB,EAG1BzB,SAAS,CAAC2C,IAHgB,CAApB,CAhBa;AAqBvBE,EAAAA,IAAI,EAAE7C,SAAS,CAACqC,SAAV,CAAoB,CACtBrC,SAAS,CAAC2B,MADY,EAEtB3B,SAAS,CAACyB,IAFY,EAGtBzB,SAAS,CAAC2C,IAHY,CAApB,EAIHb;AAzBoB,CAA3B;AA2BAjB,cAAc,CAACiC,YAAf,GAA8B;AAC1BtB,EAAAA,QAAQ,EAAE,IADgB;AAE1BO,EAAAA,OAAO,EAAE,EAFiB;AAG1Bc,EAAAA,IAAI,EAAE;AAHoB,CAA9B;AAKA;AACA;AACA;AACA;;AACA,OAAO,IAAIvB,sBAAsB,GAAG,UAAUR,EAAV,EAAc;AAC9C,MAAIc,QAAQ,GAAGd,EAAE,CAACc,QAAlB;AAAA,MAA4Bb,MAAM,GAAGD,EAAE,CAACC,MAAxC;AAAA,MAAgDC,MAAM,GAAGF,EAAE,CAACE,MAA5D;AAAA,MAAoEE,KAAK,GAAG3B,MAAM,CAACuB,EAAD,EAAK,CAAC,UAAD,EAAa,QAAb,EAAuB,QAAvB,CAAL,CAAlF;;AACA,MAAIlB,KAAK,CAACC,QAAN,CAAekD,KAAf,CAAqBnB,QAArB,MAAmC,CAAvC,EAA0C;AACtC,UAAM,IAAIoB,KAAJ,CAAU,8CAAV,CAAN;AACH;;AACD,MAAItB,QAAQ,GAAGR,KAAK,CAACQ,QAArB;AAAA,MAA+Ba,QAAQ,GAAGrB,KAAK,CAACqB,QAAhD;AAAA,MAA0DD,SAAS,GAAGpB,KAAK,CAACoB,SAA5E;AACA,MAAIW,gBAAgB,GAAG1C,mBAAmB,CAAC9B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKyC,KAAL,CAAT,EAAsB;AAAEqB,IAAAA,QAAQ,EAAEA,QAAZ;AACrExB,IAAAA,MAAM,EAAEA,MAD6D;AAErEC,IAAAA,MAAM,EAAEA,MAF6D;AAGrEU,IAAAA,QAAQ,EAAEA;AAH2D,GAAtB,CAAT,CAA1C;AAIA,SAAQ9B,KAAK,CAACuB,aAAN,CAAoBX,uBAApB,EAA6C;AAAE0C,IAAAA,KAAK,EAAEZ;AAAT,GAA7C,EACJ1C,KAAK,CAACuB,aAAN,CAAoBgC,sBAApB,EAA4C1E,QAAQ,CAAC,EAAD,EAAKyC,KAAL,EAAYZ,YAAY,CAAC;AACzEgC,IAAAA,SAAS,EAAEA,SAD8D;AAEzEc,IAAAA,EAAE,EAAElD,GAAG,CAACa,MAAD,EAASC,MAAT;AAFkE,GAAD,CAAxB,EAGhD;AAAEiC,IAAAA,gBAAgB,EAAEA;AAApB,GAHgD,CAApD,EAG6CrB,QAH7C,CADI,CAAR;AAKH,CAfM;AAgBP,IAAIyB,SAAS,GAAGlD,UAAU,CAAC,UAAUmD,KAAV,EAAiB;AAAE,SAAQ;AAClDT,IAAAA,IAAI,EAAE;AACFU,MAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC;AAD3B;AAD4C,GAAR;AAIzC,CAJqB,EAInB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAJmB,CAA1B,C,CAKA;;AACA,IAAIC,eAAe,GAAG,UAAUpE,CAAV,EAAa;AAAE,SAAOA,CAAC,CAACoE,eAAF,EAAP;AAA6B,CAAlE;;AACA,OAAO,IAAIC,kBAAkB,GAAG,UAAU3C,KAAV,EAAiB;AAC7C,MAAIQ,QAAQ,GAAGR,KAAK,CAACQ,QAArB;AAAA,MAA+BE,QAAQ,GAAGV,KAAK,CAACU,QAAhD;AAAA,MAA0DK,SAAS,GAAGf,KAAK,CAACe,SAA5E;AAAA,MAAuF6B,eAAe,GAAG5C,KAAK,CAACa,OAA/G;AAAA,MAAwHgC,KAAK,GAAG7C,KAAK,CAAC6C,KAAtI;AAAA,MAA6IC,MAAM,GAAG9C,KAAK,CAAC8C,MAA5J;AAAA,MAAoKC,OAAO,GAAG/C,KAAK,CAAC+C,OAApL;AAAA,MAA6LlD,MAAM,GAAGG,KAAK,CAACH,MAA5M;AAAA,MAAoNuB,SAAS,GAAGpB,KAAK,CAACoB,SAAtO;AAAA,MAAiP4B,eAAe,GAAGhD,KAAK,CAACgD,eAAzQ;AAAA,MAA0R3B,QAAQ,GAAGrB,KAAK,CAACqB,QAA3S;AAAA,MAAqTU,gBAAgB,GAAG/B,KAAK,CAAC+B,gBAA9U;AAAA,MAAgWjC,MAAM,GAAGE,KAAK,CAACF,MAA/W;AAAA,MAAuXF,EAAE,GAAGI,KAAK,CAACwB,eAAlY;AAAA,MAAmZA,eAAe,GAAG5B,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAA7b;AAAA,MAAicqD,IAAI,GAAG5E,MAAM,CAAC2B,KAAD,EAAQ,CAAC,UAAD,EAAa,UAAb,EAAyB,WAAzB,EAAsC,SAAtC,EAAiD,OAAjD,EAA0D,QAA1D,EAAoE,SAApE,EAA+E,QAA/E,EAAyF,WAAzF,EAAsG,iBAAtG,EAAyH,UAAzH,EAAqI,kBAArI,EAAyJ,QAAzJ,EAAmK,iBAAnK,CAAR,CAA9c;;AACA,MAAIa,OAAO,GAAGsB,SAAS,CAACnC,KAAD,CAAvB;;AACA,MAAI,CAAC8C,MAAL,EAAa;AACT,WAAOpE,KAAK,CAACuB,aAAN,CAAoBV,cAApB,EAAoC,IAApC,CAAP;AACH;;AACD,MAAIsD,KAAJ,EAAW;AACP;AACA;AACAnE,MAAAA,KAAK,CAACuB,aAAN,CAAoBd,SAApB,EAA+B;AAAE,6BAAqB0D,KAAK,CAACK,OAAN,GAAgBL,KAAK,CAACK,OAAtB,GAAgCL,KAAvD;AAA8DM,QAAAA,IAAI,EAAE,cAApE;AAAoFd,QAAAA,KAAK,EAAE,OAA3F;AAAoGe,QAAAA,QAAQ,EAAE;AAA9G,OAA/B;AACA;;AAHA;AAKH;;AACD,MAAI,CAACJ,eAAL,EAAsB;AAClB,WAAO,IAAP;AACH;;AACD,MAAIjB,gBAAJ,EAAsB;AAClB,WAAQrD,KAAK,CAACuB,aAAN,CAAoBT,IAApB,EAA0B;AAAE6D,MAAAA,EAAE,EAAEtB,gBAAN;AAAwBhB,MAAAA,SAAS,EAAEA,SAAnC;AAA8CuC,MAAAA,OAAO,EAAEZ;AAAvD,KAA1B,EAAoG9D,YAAY,CAACD,QAAQ,CAAC4E,IAAT,CAAc7C,QAAd,CAAD,EAA0BnD,QAAQ,CAAC;AAAEwD,MAAAA,SAAS,EAAEhC,UAAU,CAAC2B,QAAQ,CAACV,KAAT,CAAee,SAAhB,EAA2BF,OAAO,CAACc,IAAnC,CAAwC;AAAxC,OAAvB;AACpJ9B,MAAAA,MAAM,EAAEmD,eAD4I;AAC3H3B,MAAAA,QAAQ,EAAED,SADiH;AACtGZ,MAAAA,QAAQ,EAAEA,QAD4F;AAEvJgB,MAAAA,eAAe,EAAEA;AAFsI,KAAD,EAElH/B,sBAAsB,CAACwD,IAAD,CAF4F,CAAlC,CAAhH,CAAR;AAGH;;AACD,SAAOrE,YAAY,CAACD,QAAQ,CAAC4E,IAAT,CAAc7C,QAAd,CAAD,EAA0BnD,QAAQ,CAAC;AAAEsC,IAAAA,MAAM,EAAEmD,eAAV;AAA2B3B,IAAAA,QAAQ,EAAED,SAArC;AAAgDZ,IAAAA,QAAQ,EAAEA,QAA1D;AAClDgB,IAAAA,eAAe,EAAEA;AADiC,GAAD,EACb/B,sBAAsB,CAACwD,IAAD,CADT,CAAlC,CAAnB;AAEH,CAvBM;AAwBPN,kBAAkB,CAACtC,SAAnB,GAA+B;AAC3BG,EAAAA,QAAQ,EAAE1B,SAAS,CAAC2B,MADO;AAE3BC,EAAAA,QAAQ,EAAE5B,SAAS,CAAC6B,OAFO;AAG3BI,EAAAA,SAAS,EAAEjC,SAAS,CAAC2B,MAHM;AAI3BI,EAAAA,OAAO,EAAE/B,SAAS,CAACgC,GAJQ;AAK3BiC,EAAAA,OAAO,EAAEjE,SAAS,CAACyB,IALQ;AAM3BV,EAAAA,MAAM,EAAEf,SAAS,CAACgC,GANS;AAO3BM,EAAAA,SAAS,EAAEtC,SAAS,CAAC2B,MAPM;AAQ3BuC,EAAAA,eAAe,EAAElE,SAAS,CAACgC,GARA;AAS3BO,EAAAA,QAAQ,EAAEvC,SAAS,CAAC2B,MATO;AAU3BsB,EAAAA,gBAAgB,EAAEjD,SAAS,CAACqC,SAAV,CAAoB,CAClCrC,SAAS,CAAC2B,MADwB,EAElC3B,SAAS,CAAC0E,KAAV,CAAgB,CAAC,KAAD,CAAhB,CAFkC,CAApB,CAVS;AAc3B1D,EAAAA,MAAM,EAAEhB,SAAS,CAAC2B,MAdS;AAe3Be,EAAAA,eAAe,EAAE1C,SAAS,CAACqC,SAAV,CAAoB,CAACrC,SAAS,CAAC2C,IAAX,EAAiB3C,SAAS,CAACyB,IAA3B,CAApB;AAfU,CAA/B;AAiBA,IAAI0B,sBAAsB,GAAGpD,IAAI,CAAC8D,kBAAD,CAAjC;AACA,eAAehD,cAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useReference, getResourceLinkPath, ResourceContextProvider, } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Link from '../Link';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\n/**\n * Fetch reference record, and delegate rendering to child component.\n *\n * The reference prop should be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * By default, includes a link to the <Edit> page of the related record\n * (`/users/:userId` in the previous example).\n *\n * Set the `link` prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link=\"show\">\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * You can also prevent `<ReferenceField>` from adding link to children by setting\n * `link` to false.\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={false}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * Alternatively, you can also pass a custom function to `link`. It must take reference and record\n * as arguments and return a string\n *\n * @example\n * <ReferenceField label=\"User\" source=\"userId\" reference=\"users\" link={(record, reference) => \"/path/to/${reference}/${record}\"}>\n *     <TextField source=\"name\" />\n * </ReferenceField>\n *\n * @default\n * In previous versions of React-Admin, the prop `linkType` was used. It is now deprecated and replaced with `link`. However\n * backward-compatibility is still kept\n */\nvar ReferenceField = function (_a) {\n    var record = _a.record, source = _a.source, emptyText = _a.emptyText, props = __rest(_a, [\"record\", \"source\", \"emptyText\"]);\n    return get(record, source) == null ? (emptyText ? (React.createElement(Typography, { component: \"span\", variant: \"body2\" }, emptyText)) : null) : (React.createElement(NonEmptyReferenceField, __assign({}, props, { record: record, source: source })));\n};\nReferenceField.propTypes = {\n    addLabel: PropTypes.bool,\n    basePath: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    classes: PropTypes.any,\n    className: PropTypes.string,\n    cellClassName: PropTypes.string,\n    headerClassName: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    record: PropTypes.any,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    sortBy: PropTypes.string,\n    sortByOrder: fieldPropTypes.sortByOrder,\n    source: PropTypes.string.isRequired,\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    linkType: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    link: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]).isRequired,\n};\nReferenceField.defaultProps = {\n    addLabel: true,\n    classes: {},\n    link: 'edit',\n};\n/**\n * This intermediate component is made necessary by the useReference hook,\n * which cannot be called conditionally when get(record, source) is empty.\n */\nexport var NonEmptyReferenceField = function (_a) {\n    var children = _a.children, record = _a.record, source = _a.source, props = __rest(_a, [\"children\", \"record\", \"source\"]);\n    if (React.Children.count(children) !== 1) {\n        throw new Error('<ReferenceField> only accepts a single child');\n    }\n    var basePath = props.basePath, resource = props.resource, reference = props.reference;\n    var resourceLinkPath = getResourceLinkPath(__assign(__assign({}, props), { resource: resource,\n        record: record,\n        source: source,\n        basePath: basePath }));\n    return (React.createElement(ResourceContextProvider, { value: reference },\n        React.createElement(PureReferenceFieldView, __assign({}, props, useReference({\n            reference: reference,\n            id: get(record, source),\n        }), { resourceLinkPath: resourceLinkPath }), children)));\n};\nvar useStyles = makeStyles(function (theme) { return ({\n    link: {\n        color: theme.palette.primary.main,\n    },\n}); }, { name: 'RaReferenceField' });\n// useful to prevent click bubbling in a datagrid with rowClick\nvar stopPropagation = function (e) { return e.stopPropagation(); };\nexport var ReferenceFieldView = function (props) {\n    var basePath = props.basePath, children = props.children, className = props.className, classesOverride = props.classes, error = props.error, loaded = props.loaded, loading = props.loading, record = props.record, reference = props.reference, referenceRecord = props.referenceRecord, resource = props.resource, resourceLinkPath = props.resourceLinkPath, source = props.source, _a = props.translateChoice, translateChoice = _a === void 0 ? false : _a, rest = __rest(props, [\"basePath\", \"children\", \"className\", \"classes\", \"error\", \"loaded\", \"loading\", \"record\", \"reference\", \"referenceRecord\", \"resource\", \"resourceLinkPath\", \"source\", \"translateChoice\"]);\n    var classes = useStyles(props);\n    if (!loaded) {\n        return React.createElement(LinearProgress, null);\n    }\n    if (error) {\n        return (\n        /* eslint-disable jsx-a11y/role-supports-aria-props */\n        React.createElement(ErrorIcon, { \"aria-errormessage\": error.message ? error.message : error, role: \"presentation\", color: \"error\", fontSize: \"small\" })\n        /* eslint-enable */\n        );\n    }\n    if (!referenceRecord) {\n        return null;\n    }\n    if (resourceLinkPath) {\n        return (React.createElement(Link, { to: resourceLinkPath, className: className, onClick: stopPropagation }, cloneElement(Children.only(children), __assign({ className: classnames(children.props.className, classes.link // force color override for Typography components\n            ), record: referenceRecord, resource: reference, basePath: basePath,\n            translateChoice: translateChoice }, sanitizeFieldRestProps(rest)))));\n    }\n    return cloneElement(Children.only(children), __assign({ record: referenceRecord, resource: reference, basePath: basePath,\n        translateChoice: translateChoice }, sanitizeFieldRestProps(rest)));\n};\nReferenceFieldView.propTypes = {\n    basePath: PropTypes.string,\n    children: PropTypes.element,\n    className: PropTypes.string,\n    classes: PropTypes.any,\n    loading: PropTypes.bool,\n    record: PropTypes.any,\n    reference: PropTypes.string,\n    referenceRecord: PropTypes.any,\n    resource: PropTypes.string,\n    resourceLinkPath: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.oneOf([false]),\n    ]),\n    source: PropTypes.string,\n    translateChoice: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n};\nvar PureReferenceFieldView = memo(ReferenceFieldView);\nexport default ReferenceField;\n"]},"metadata":{},"sourceType":"module"}