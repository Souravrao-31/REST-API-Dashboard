{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport lodashMemoize from 'lodash/memoize';\n/* eslint-disable no-underscore-dangle */\n\n/* @link http://stackoverflow.com/questions/46155/validate-email-address-in-javascript */\n\nvar EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // eslint-disable-line no-useless-escape\n\nvar isEmpty = function (value) {\n  return typeof value === 'undefined' || value === null || value === '' || Array.isArray(value) && value.length === 0;\n};\n\nvar getMessage = function (message, messageArgs, value, values) {\n  return typeof message === 'function' ? message({\n    args: messageArgs,\n    value: value,\n    values: values\n  }) : messageArgs ? {\n    message: message,\n    args: messageArgs\n  } : message;\n}; // If we define validation functions directly in JSX, it will\n// result in a new function at every render, and then trigger infinite re-render.\n// Hence, we memoize every built-in validator to prevent a \"Maximum call stack\" error.\n\n\nvar memoize = function (fn) {\n  return lodashMemoize(fn, function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return JSON.stringify(args);\n  });\n};\n\nvar isFunction = function (value) {\n  return typeof value === 'function';\n}; // Compose multiple validators into a single one for use with final-form\n\n\nexport var composeValidators = function () {\n  var validators = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    validators[_i] = arguments[_i];\n  }\n\n  return function (value, values, meta) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var allValidators, _i, allValidators_1, validator, error;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            allValidators = (Array.isArray(validators[0]) ? validators[0] : validators).filter(isFunction);\n            _i = 0, allValidators_1 = allValidators;\n            _a.label = 1;\n\n          case 1:\n            if (!(_i < allValidators_1.length)) return [3\n            /*break*/\n            , 4];\n            validator = allValidators_1[_i];\n            return [4\n            /*yield*/\n            , validator(value, values, meta)];\n\n          case 2:\n            error = _a.sent();\n\n            if (error) {\n              return [2\n              /*return*/\n              , error];\n            }\n\n            _a.label = 3;\n\n          case 3:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n}; // Compose multiple validators into a single one for use with final-form\n\nexport var composeSyncValidators = function () {\n  var validators = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    validators[_i] = arguments[_i];\n  }\n\n  return function (value, values, meta) {\n    var allValidators = (Array.isArray(validators[0]) ? validators[0] : validators).filter(isFunction);\n\n    for (var _i = 0, allValidators_2 = allValidators; _i < allValidators_2.length; _i++) {\n      var validator = allValidators_2[_i];\n      var error = validator(value, values, meta);\n\n      if (error) {\n        return error;\n      }\n    }\n  };\n};\n/**\n * Required validator\n *\n * Returns an error if the value is null, undefined, or empty\n *\n * @param {string|Function} message\n *\n * @example\n *\n * const titleValidators = [required('The title is required')];\n * <TextInput name=\"title\" validate={titleValidators} />\n */\n\nexport var required = memoize(function (message) {\n  if (message === void 0) {\n    message = 'ra.validation.required';\n  }\n\n  return Object.assign(function (value, values) {\n    return isEmpty(value) ? getMessage(message, undefined, value, values) : undefined;\n  }, {\n    isRequired: true\n  });\n});\n/**\n * Minimum length validator\n *\n * Returns an error if the value has a length less than the parameter\n *\n * @param {integer} min\n * @param {string|Function} message\n *\n * @example\n *\n * const passwordValidators = [minLength(10, 'Should be at least 10 characters')];\n * <TextInput type=\"password\" name=\"password\" validate={passwordValidators} />\n */\n\nexport var minLength = memoize(function (min, message) {\n  if (message === void 0) {\n    message = 'ra.validation.minLength';\n  }\n\n  return function (value, values) {\n    return !isEmpty(value) && value.length < min ? getMessage(message, {\n      min: min\n    }, value, values) : undefined;\n  };\n});\n/**\n * Maximum length validator\n *\n * Returns an error if the value has a length higher than the parameter\n *\n * @param {integer} max\n * @param {string|Function} message\n *\n * @example\n *\n * const nameValidators = [maxLength(10, 'Should be at most 10 characters')];\n * <TextInput name=\"name\" validate={nameValidators} />\n */\n\nexport var maxLength = memoize(function (max, message) {\n  if (message === void 0) {\n    message = 'ra.validation.maxLength';\n  }\n\n  return function (value, values) {\n    return !isEmpty(value) && value.length > max ? getMessage(message, {\n      max: max\n    }, value, values) : undefined;\n  };\n});\n/**\n * Minimum validator\n *\n * Returns an error if the value is less than the parameter\n *\n * @param {integer} min\n * @param {string|Function} message\n *\n * @example\n *\n * const fooValidators = [minValue(5, 'Should be more than 5')];\n * <NumberInput name=\"foo\" validate={fooValidators} />\n */\n\nexport var minValue = memoize(function (min, message) {\n  if (message === void 0) {\n    message = 'ra.validation.minValue';\n  }\n\n  return function (value, values) {\n    return !isEmpty(value) && value < min ? getMessage(message, {\n      min: min\n    }, value, values) : undefined;\n  };\n});\n/**\n * Maximum validator\n *\n * Returns an error if the value is higher than the parameter\n *\n * @param {integer} max\n * @param {string|Function} message\n *\n * @example\n *\n * const fooValidators = [maxValue(10, 'Should be less than 10')];\n * <NumberInput name=\"foo\" validate={fooValidators} />\n */\n\nexport var maxValue = memoize(function (max, message) {\n  if (message === void 0) {\n    message = 'ra.validation.maxValue';\n  }\n\n  return function (value, values) {\n    return !isEmpty(value) && value > max ? getMessage(message, {\n      max: max\n    }, value, values) : undefined;\n  };\n});\n/**\n * Number validator\n *\n * Returns an error if the value is not a number\n *\n * @param {string|Function} message\n *\n * @example\n *\n * const ageValidators = [number('Must be a number')];\n * <TextInput name=\"age\" validate={ageValidators} />\n */\n\nexport var number = memoize(function (message) {\n  if (message === void 0) {\n    message = 'ra.validation.number';\n  }\n\n  return function (value, values) {\n    return !isEmpty(value) && isNaN(Number(value)) ? getMessage(message, undefined, value, values) : undefined;\n  };\n});\n/**\n * Regular expression validator\n *\n * Returns an error if the value does not match the pattern given as parameter\n *\n * @param {RegExp} pattern\n * @param {string|Function} message\n *\n * @example\n *\n * const zipValidators = [regex(/^\\d{5}(?:[-\\s]\\d{4})?$/, 'Must be a zip code')];\n * <TextInput name=\"zip\" validate={zipValidators} />\n */\n\nexport var regex = lodashMemoize(function (pattern, message) {\n  if (message === void 0) {\n    message = 'ra.validation.regex';\n  }\n\n  return function (value, values) {\n    return !isEmpty(value) && typeof value === 'string' && !pattern.test(value) ? getMessage(message, {\n      pattern: pattern\n    }, value, values) : undefined;\n  };\n}, function (pattern, message) {\n  return pattern.toString() + message;\n});\n/**\n * Email validator\n *\n * Returns an error if the value is not a valid email\n *\n * @param {string|Function} message\n *\n * @example\n *\n * const emailValidators = [email('Must be an email')];\n * <TextInput name=\"email\" validate={emailValidators} />\n */\n\nexport var email = memoize(function (message) {\n  if (message === void 0) {\n    message = 'ra.validation.email';\n  }\n\n  return regex(EMAIL_REGEX, message);\n});\n\nvar oneOfTypeMessage = function (_a) {\n  var args = _a.args;\n  return {\n    message: 'ra.validation.oneOf',\n    args: args\n  };\n};\n/**\n * Choices validator\n *\n * Returns an error if the value is not among the list passed as parameter\n *\n * @param {array} list\n * @param {string|Function} message\n *\n * @example\n *\n * const genderValidators = [choices(['male', 'female'], 'Must be either Male or Female')];\n * <TextInput name=\"gender\" validate={genderValidators} />\n */\n\n\nexport var choices = memoize(function (list, message) {\n  if (message === void 0) {\n    message = oneOfTypeMessage;\n  }\n\n  return function (value, values) {\n    return !isEmpty(value) && list.indexOf(value) === -1 ? getMessage(message, {\n      list: list\n    }, value, values) : undefined;\n  };\n});","map":{"version":3,"sources":["C:/Users/win-10/Desktop/React/admin-dash/client/node_modules/ra-core/esm/form/validate.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","lodashMemoize","EMAIL_REGEX","isEmpty","Array","isArray","getMessage","message","messageArgs","values","args","memoize","fn","_i","arguments","JSON","stringify","isFunction","composeValidators","validators","meta","allValidators","allValidators_1","validator","error","_a","filter","composeSyncValidators","allValidators_2","required","Object","assign","undefined","isRequired","minLength","min","maxLength","max","minValue","maxValue","number","isNaN","Number","regex","pattern","test","toString","email","oneOfTypeMessage","choices","list","indexOf"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport lodashMemoize from 'lodash/memoize';\n/* eslint-disable no-underscore-dangle */\n/* @link http://stackoverflow.com/questions/46155/validate-email-address-in-javascript */\nvar EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // eslint-disable-line no-useless-escape\nvar isEmpty = function (value) {\n    return typeof value === 'undefined' ||\n        value === null ||\n        value === '' ||\n        (Array.isArray(value) && value.length === 0);\n};\nvar getMessage = function (message, messageArgs, value, values) {\n    return typeof message === 'function'\n        ? message({\n            args: messageArgs,\n            value: value,\n            values: values,\n        })\n        : messageArgs\n            ? {\n                message: message,\n                args: messageArgs,\n            }\n            : message;\n};\n// If we define validation functions directly in JSX, it will\n// result in a new function at every render, and then trigger infinite re-render.\n// Hence, we memoize every built-in validator to prevent a \"Maximum call stack\" error.\nvar memoize = function (fn) {\n    return lodashMemoize(fn, function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return JSON.stringify(args);\n    });\n};\nvar isFunction = function (value) { return typeof value === 'function'; };\n// Compose multiple validators into a single one for use with final-form\nexport var composeValidators = function () {\n    var validators = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        validators[_i] = arguments[_i];\n    }\n    return function (value, values, meta) { return __awaiter(void 0, void 0, void 0, function () {\n        var allValidators, _i, allValidators_1, validator, error;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    allValidators = (Array.isArray(validators[0])\n                        ? validators[0]\n                        : validators).filter(isFunction);\n                    _i = 0, allValidators_1 = allValidators;\n                    _a.label = 1;\n                case 1:\n                    if (!(_i < allValidators_1.length)) return [3 /*break*/, 4];\n                    validator = allValidators_1[_i];\n                    return [4 /*yield*/, validator(value, values, meta)];\n                case 2:\n                    error = _a.sent();\n                    if (error) {\n                        return [2 /*return*/, error];\n                    }\n                    _a.label = 3;\n                case 3:\n                    _i++;\n                    return [3 /*break*/, 1];\n                case 4: return [2 /*return*/];\n            }\n        });\n    }); };\n};\n// Compose multiple validators into a single one for use with final-form\nexport var composeSyncValidators = function () {\n    var validators = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        validators[_i] = arguments[_i];\n    }\n    return function (value, values, meta) {\n        var allValidators = (Array.isArray(validators[0])\n            ? validators[0]\n            : validators).filter(isFunction);\n        for (var _i = 0, allValidators_2 = allValidators; _i < allValidators_2.length; _i++) {\n            var validator = allValidators_2[_i];\n            var error = validator(value, values, meta);\n            if (error) {\n                return error;\n            }\n        }\n    };\n};\n/**\n * Required validator\n *\n * Returns an error if the value is null, undefined, or empty\n *\n * @param {string|Function} message\n *\n * @example\n *\n * const titleValidators = [required('The title is required')];\n * <TextInput name=\"title\" validate={titleValidators} />\n */\nexport var required = memoize(function (message) {\n    if (message === void 0) { message = 'ra.validation.required'; }\n    return Object.assign(function (value, values) {\n        return isEmpty(value)\n            ? getMessage(message, undefined, value, values)\n            : undefined;\n    }, { isRequired: true });\n});\n/**\n * Minimum length validator\n *\n * Returns an error if the value has a length less than the parameter\n *\n * @param {integer} min\n * @param {string|Function} message\n *\n * @example\n *\n * const passwordValidators = [minLength(10, 'Should be at least 10 characters')];\n * <TextInput type=\"password\" name=\"password\" validate={passwordValidators} />\n */\nexport var minLength = memoize(function (min, message) {\n    if (message === void 0) { message = 'ra.validation.minLength'; }\n    return function (value, values) {\n        return !isEmpty(value) && value.length < min\n            ? getMessage(message, { min: min }, value, values)\n            : undefined;\n    };\n});\n/**\n * Maximum length validator\n *\n * Returns an error if the value has a length higher than the parameter\n *\n * @param {integer} max\n * @param {string|Function} message\n *\n * @example\n *\n * const nameValidators = [maxLength(10, 'Should be at most 10 characters')];\n * <TextInput name=\"name\" validate={nameValidators} />\n */\nexport var maxLength = memoize(function (max, message) {\n    if (message === void 0) { message = 'ra.validation.maxLength'; }\n    return function (value, values) {\n        return !isEmpty(value) && value.length > max\n            ? getMessage(message, { max: max }, value, values)\n            : undefined;\n    };\n});\n/**\n * Minimum validator\n *\n * Returns an error if the value is less than the parameter\n *\n * @param {integer} min\n * @param {string|Function} message\n *\n * @example\n *\n * const fooValidators = [minValue(5, 'Should be more than 5')];\n * <NumberInput name=\"foo\" validate={fooValidators} />\n */\nexport var minValue = memoize(function (min, message) {\n    if (message === void 0) { message = 'ra.validation.minValue'; }\n    return function (value, values) {\n        return !isEmpty(value) && value < min\n            ? getMessage(message, { min: min }, value, values)\n            : undefined;\n    };\n});\n/**\n * Maximum validator\n *\n * Returns an error if the value is higher than the parameter\n *\n * @param {integer} max\n * @param {string|Function} message\n *\n * @example\n *\n * const fooValidators = [maxValue(10, 'Should be less than 10')];\n * <NumberInput name=\"foo\" validate={fooValidators} />\n */\nexport var maxValue = memoize(function (max, message) {\n    if (message === void 0) { message = 'ra.validation.maxValue'; }\n    return function (value, values) {\n        return !isEmpty(value) && value > max\n            ? getMessage(message, { max: max }, value, values)\n            : undefined;\n    };\n});\n/**\n * Number validator\n *\n * Returns an error if the value is not a number\n *\n * @param {string|Function} message\n *\n * @example\n *\n * const ageValidators = [number('Must be a number')];\n * <TextInput name=\"age\" validate={ageValidators} />\n */\nexport var number = memoize(function (message) {\n    if (message === void 0) { message = 'ra.validation.number'; }\n    return function (value, values) {\n        return !isEmpty(value) && isNaN(Number(value))\n            ? getMessage(message, undefined, value, values)\n            : undefined;\n    };\n});\n/**\n * Regular expression validator\n *\n * Returns an error if the value does not match the pattern given as parameter\n *\n * @param {RegExp} pattern\n * @param {string|Function} message\n *\n * @example\n *\n * const zipValidators = [regex(/^\\d{5}(?:[-\\s]\\d{4})?$/, 'Must be a zip code')];\n * <TextInput name=\"zip\" validate={zipValidators} />\n */\nexport var regex = lodashMemoize(function (pattern, message) {\n    if (message === void 0) { message = 'ra.validation.regex'; }\n    return function (value, values) {\n        return !isEmpty(value) && typeof value === 'string' && !pattern.test(value)\n            ? getMessage(message, { pattern: pattern }, value, values)\n            : undefined;\n    };\n}, function (pattern, message) {\n    return pattern.toString() + message;\n});\n/**\n * Email validator\n *\n * Returns an error if the value is not a valid email\n *\n * @param {string|Function} message\n *\n * @example\n *\n * const emailValidators = [email('Must be an email')];\n * <TextInput name=\"email\" validate={emailValidators} />\n */\nexport var email = memoize(function (message) {\n    if (message === void 0) { message = 'ra.validation.email'; }\n    return regex(EMAIL_REGEX, message);\n});\nvar oneOfTypeMessage = function (_a) {\n    var args = _a.args;\n    return ({\n        message: 'ra.validation.oneOf',\n        args: args,\n    });\n};\n/**\n * Choices validator\n *\n * Returns an error if the value is not among the list passed as parameter\n *\n * @param {array} list\n * @param {string|Function} message\n *\n * @example\n *\n * const genderValidators = [choices(['male', 'female'], 'Must be either Male or Female')];\n * <TextInput name=\"gender\" validate={genderValidators} />\n */\nexport var choices = memoize(function (list, message) {\n    if (message === void 0) { message = oneOfTypeMessage; }\n    return function (value, values) {\n        return !isEmpty(value) && list.indexOf(value) === -1\n            ? getMessage(message, { list: list }, value, values)\n            : undefined;\n    };\n});\n"]},"metadata":{},"sourceType":"module"}